1. How to compile

First, load the metis partioner and then, you can compile by simple make command:

	> make


2. How to run Infomap

	[Usage] >./ompInfomap <seed> <network data> <# threads> <# attempts> <threshold> <vThresh> <maxIter> <outDir> <prior/normal> <metis_partition_file>

The required arguments are following:

	1) seed: this is for random seed value for generating random sequential order of vertices during the iterative optimization process.

	2) network data: Infomap supports Compressed Sparse Row format network (.csr)
				You can find an example of each format in the data/ directory.
				You can also find more datasets from Stanford Network Analysis Project (SNAP) network data repository.

	3) # thread: the number of threads 

	4) # attempts: the number of attempts (this is not applied yet, so it only return with 1 attempt.)

	5) threshold: the stop condition threshold  (recommended 1e-3 or 1e-4)

	6) vThresh: the threshold value for each vertex movement (recommended 0.0)

	7) maxIter: the number of maximum iteration for each super-step. (recommended 10)

	8) outDir: the directory where the output files will be located.

	9) prior/normal flag: apply the prioritized search for efficient runs (prior) or not (normal).  (recommended prior)

       10) metis_partition_fille: this is the network partitioner file generated by metis for the given network. If you are using 4 mpi processes, then use the corresponding metis paritioner consisting of 4 different partition (named as 4.txt) for the given network.


